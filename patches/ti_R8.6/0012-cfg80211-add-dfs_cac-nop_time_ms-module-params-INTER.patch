From 541953a830d5f42e5050845518ab35b81037c84f Mon Sep 17 00:00:00 2001
From: Eliad Peller <eliad@wizery.com>
Date: Thu, 1 Jan 2015 12:57:32 +0200
Subject: [PATCH 12/33] cfg80211: add dfs_cac/nop_time_ms module params
 (INTERNAL)

Add new cac_time_ms module param to allow setting
the dfs CAC and NOP times (in milliseconds)

Signed-off-by: Eliad Peller <eliad@wizery.com>
---
 backports/net/wireless/mlme.c | 7 +++++--
 backports/net/wireless/reg.c  | 6 +++++-
 2 files changed, 10 insertions(+), 3 deletions(-)

diff --git a/backports/net/wireless/mlme.c b/backports/net/wireless/mlme.c
index 070585f..9a4e231 100644
--- a/backports/net/wireless/mlme.c
+++ b/backports/net/wireless/mlme.c
@@ -17,6 +17,9 @@
 #include "nl80211.h"
 #include "rdev-ops.h"
 
+static unsigned int dfs_nop_time_ms = IEEE80211_DFS_MIN_NOP_TIME_MS;
+module_param(dfs_nop_time_ms, uint, 0644);
+MODULE_PARM_DESC(dfs_nop_time_ms, "DFS NOP time (in ms)");
 
 void cfg80211_rx_assoc_resp(struct net_device *dev, struct cfg80211_bss *bss,
 			    const u8 *buf, size_t len, int uapsd_queues)
@@ -694,7 +697,7 @@ void cfg80211_dfs_channels_update_work(struct work_struct *work)
 				continue;
 
 			timeout = c->dfs_state_entered + msecs_to_jiffies(
-					IEEE80211_DFS_MIN_NOP_TIME_MS);
+					dfs_nop_time_ms);
 
 			if (time_after_eq(jiffies, timeout)) {
 				c->dfs_state = NL80211_DFS_USABLE;
@@ -740,7 +743,7 @@ void cfg80211_radar_event(struct wiphy *wiphy,
 	 */
 	cfg80211_set_dfs_state(wiphy, chandef, NL80211_DFS_UNAVAILABLE);
 
-	timeout = msecs_to_jiffies(IEEE80211_DFS_MIN_NOP_TIME_MS);
+	timeout = msecs_to_jiffies(dfs_nop_time_ms);
 	queue_delayed_work(cfg80211_wq, &rdev->dfs_update_channels_wk,
 			   timeout);
 
diff --git a/backports/net/wireless/reg.c b/backports/net/wireless/reg.c
index de62673..1f241d8 100644
--- a/backports/net/wireless/reg.c
+++ b/backports/net/wireless/reg.c
@@ -277,6 +277,10 @@ static char user_alpha2[2];
 module_param(ieee80211_regdom, charp, 0444);
 MODULE_PARM_DESC(ieee80211_regdom, "IEEE 802.11 regulatory domain code");
 
+static unsigned int dfs_cac_time_ms = IEEE80211_DFS_MIN_CAC_TIME_MS;
+module_param(dfs_cac_time_ms, uint, 0644);
+MODULE_PARM_DESC(dfs_cac_time_ms, "DFS CAC time (in ms)");
+
 static void reg_free_request(struct regulatory_request *request)
 {
 	if (request != get_last_request())
@@ -1221,7 +1225,7 @@ static void handle_channel(struct wiphy *wiphy,
 		if (reg_rule->dfs_cac_ms)
 			chan->dfs_cac_ms = reg_rule->dfs_cac_ms;
 		else
-			chan->dfs_cac_ms = IEEE80211_DFS_MIN_CAC_TIME_MS;
+			chan->dfs_cac_ms = dfs_cac_time_ms;
 	}
 
 	if (chan->orig_mpwr) {
-- 
2.5.1

