From e1462e9b831ef4df105419a8b170cb3170166a41 Mon Sep 17 00:00:00 2001
From: Eliad Peller <eliad@wizery.com>
Date: Tue, 11 Feb 2014 12:01:48 +0200
Subject: [PATCH 08/33] wlcore: always set MMC_PM_KEEP_POWER (workaround)

Due to some mmc layer issues, the system automatically
powers us up on resume, which later cause issues when
we try to restore_power again explicitly.

temporarily workaround it by always asking to keep power.
this is fine as driver controls the chip power anyway.

Signed-off-by: Eliad Peller <eliad@wizery.com>
Signed-off-by: Ido Yariv <ido@wizery.com>
---
 backports/drivers/net/wireless/ti/wlcore/sdio.c | 12 ++++++++++--
 1 file changed, 10 insertions(+), 2 deletions(-)

diff --git a/backports/drivers/net/wireless/ti/wlcore/sdio.c b/backports/drivers/net/wireless/ti/wlcore/sdio.c
index ea7e07a..f50e466 100644
--- a/backports/drivers/net/wireless/ti/wlcore/sdio.c
+++ b/backports/drivers/net/wireless/ti/wlcore/sdio.c
@@ -390,8 +390,16 @@ static int wl1271_suspend(struct device *dev)
 	dev_dbg(dev, "wl1271 suspend. wow_enabled: %d\n",
 		wl->wow_enabled);
 
-	/* check whether sdio should keep power */
-	if (wl->wow_enabled) {
+	/*
+	 * check whether sdio should keep power.
+	 * due to some mmc layer issues, the system automatically
+	 * powers us up on resume, which later cause issues when
+	 * we try to restore_power again explicitly.
+	 * workaround it by always asking to keep power. this is
+	 * fine as the driver controls the chip power anyway.
+	 * TODO: remove it when mmc issue is fixed.
+	 */
+	if (true || wl->wow_enabled) {
 		sdio_flags = sdio_get_host_pm_caps(func);
 
 		if (!(sdio_flags & MMC_PM_KEEP_POWER)) {
-- 
2.5.1

